{"version":3,"sources":["AddPost/addPost.js","components/PostList.js","components/feed.js","components/home.js","components/nav.js","App.js","serviceWorker.js","index.js"],"names":["addPost","handleZip","e","zip","target","value","setState","handleFood","fType","handleQuantity","qty","parseInt","confirm","postData","state","post","submitPost","length","props","addPostFn","preventDefault","name","className","onSubmit","this","id","type","onChange","onClick","React","Component","PostList","posts","map","_todo","_index","key","Feed","componentDidMount","localStorage","getItem","savedPosts","JSON","parse","console","log","a","previousState","concat","setItem","stringify","Home","Nav","class","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.36b9f586.chunk.js","sourcesContent":["import React from 'react'\n\nclass addPost extends React.Component {\nconstructor() {\n    super()\n    this.state = {\n        post: '',\n        zip: 0,\n        qty: 1,\n        fType: 'Vegan',\n        name: ''\n    }\n}\n\n    render() {\n        return (\n            <div className='addPostContainer mx-auto mb-5 mt-5 w-50 bg-dark rounded p-5'>\n                <form\n                 onSubmit={this.submitPost}>\n                    <label>Zip Code:</label>\n                    <input \n                    id='addZipInput'\n                    type='number'\n                    className=\"zip-code bg-dark form-control w-25 text-light\"\n                    onChange={ this.handleZip }>\n                    </input>\n                    <label\n                    className=\"w-100 pt-3\"\n                    >Food type:</label>\n                    \n                    <select\n                        className=\"selectpicker\"\n                        value={this.state.fType}\n                        onChange={this.handleFood}\n                    >\n                    <option value=\"Vegan\">Vegan</option>\n                    <option value=\"Halal\">Halal</option>\n                    <option value=\"Vegetarian\">Vegetarian</option>\n                    <option value=\"Meat\">Meat</option>\n                    <option value=\"Canned\">Canned</option>\n                    <option value=\"Soup\">Soup</option>\n                    <option value=\"Produce\">Produce</option>\n                    <option value=\"Pastry\">Pastry</option>\n                    </select>\n                        \n                        <label\n                        className=\"w-100 pt-3\"\n                        >Quantity:</label>\n                        <select \n                        value= {this.state.qty}\n                        onChange={this.handleQuantity}>\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"4\">4</option>\n                            <option value=\"5\">5</option>\n                            <option value=\"6\">6</option>\n                            <option value=\"7\">7</option>\n                            <option value=\"8\">8</option>\n                            <option value=\"9\">9</option>\n                            <option value=\"10\">10</option>\n                        </select>\n                    <button\n                    className=\"btn btn-primary ml-5 w-50 ml-5\" \n                    onClick={this.confirm}>\n                    Donate</button>\n                    \n                </form>\n            </div>\n        )\n    }   \n   \n    handleZip = (e) => {\n\n        let zip = e.target.value;\n        this.setState({\n            zip: zip\n        }) \n    }\n\n    handleFood = (e) => {                        \n            this.setState({\n                fType: e.target.value\n            })\n    }\n\n    handleQuantity = (e) => {  \n                        \n        this.setState({\n            qty: parseInt(e.target.value),\n        })\n    }\n\n    confirm = () => {\n        let postData = `Zip Code: ${this.state.zip} Food Type: ${this.state.fType} Quantity: ${this.state.qty}`;\n\n        this.setState({\n            post: postData\n        })\n    }\n\n    submitPost = (e) => {\n        \n\n        this.confirm();\n        \n        if(this.state.zip !== 0 && this.state.zip.length === 5){\n            this.props.addPostFn(this.state.post)\n        }\n        \n        e.preventDefault();\n        \n    }\n}\n\nexport default addPost","import React from 'react'\n\nclass PostList extends React.Component {\n    render() {\n        const { posts }  = this.props\n\n        return (\n            <div className='postListContainer'>\n                {\n                    posts.map((_todo, _index) => {\n                        return (\n                        <div className=\"bg-primary w-50 mx-auto mb-3 p-5 rounded\" key={_index}>{_todo} \n                        <button\n                        className=\"btn btn-light ml-5\"\n                        >Claim</button></div>\n                        )\n                    })\n                    \n                }\n            </div>\n        )\n    }\n}\n\nexport default PostList;","import React, { Component } from 'react';\nimport '../css/App.css';\n\n\nimport AddPost from '../AddPost/addPost'\nimport PostList from './PostList';\n\nclass Feed extends Component{\n    constructor() {\n        super()\n        this.state = {\n            posts: []\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper\">\n              <AddPost addPostFn={this.addPost}/>\n              <PostList posts={this.state.posts} />\n            </div>\n        )\n    }\n\n    componentDidMount = () => {\n        const posts = localStorage.getItem('posts')\n        if (posts) {\n            const savedPosts = JSON.parse(posts)\n            this.setState({\n                posts: savedPosts\n            })\n        }\n        else {\n            console.log(\"no posts\")\n        }\n    }\n\n    addPost = async (post) => {\n      await this.setState(previousState => ({posts: previousState.posts.concat(post)}))\n      localStorage.setItem('posts', JSON.stringify(this.state.posts))\n      console.log(localStorage.getItem('posts'))\n    }\n}\nexport default Feed;\n","import React from 'react'\nimport '../App.css'\nimport { logDOM } from '@testing-library/react';\n\nfunction Home(){\n    return (\n        <div className=\"box\">\n            <header className=\"background-one py-5 bg-image-full\">\n                <h1 className=\"mx-auto text-light w-50 mt-3\" >We are Open Pantry</h1>\n            </header>\n\n            <section className=\"py-5\">\n                <div className=\"container\">\n                <h1>Our Mission</h1>\n                <p className=\"lead\">Giving you the power to make the world a better place. </p>\n                <p>We were founded on a principle fairness. Open Pantry is a network in which individuals and business owner can come together and give back to their communities. Open Pantry is a platform for kitchens everywhere to be able to serve a wide amount of people with quality fresh food which would otherwise be wasted. Open Pantry is the link between the individual and the masses. </p>\n                </div>\n            </section>\n\n            <section className=\"background-two py-5 bg-image-full\">\n                <div className=\"bg-two\"></div>\n            </section>\n\n            <section className=\"py-5\">\n                <div className=\"container\">\n                <h1>Give Back</h1>\n                <p className=\"lead\">Sharing is caring. </p>\n                <p>With millions in food wastage every day, Open Pantry is giving back. Giving back to the communities which thrive with collaboration. Giving back to nature which supports a cleaner ecosystem for the future coming generations.</p>\n                </div>\n            </section>\n        </div>\n    )\n}\nexport default Home;","import React from 'react';\nimport '../App.css';\nimport {Link} from 'react-router-dom'\nfunction Nav() {\n    return (\n        <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n    <div class=\"container\">\n        <Link to=\"/\">\n      <p class=\"navbar-brand\">Open pantry</p>\n      </Link>\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n        <ul class=\"navbar-nav ml-auto\">\n            <Link to=\"/\">\n                <li className=\"nav-item p-3\">Home</li>\n            </Link>\n            <Link to=\"/feed\">\n                <li className=\"nav-item p-3\">Donate</li>\n            </Link>\n            {/* <Link to=\"/login\">\n                <li className=\"nav-item p-3\">Login</li>\n            </Link> */}\n        </ul>\n      </div>\n    </div>\n  </nav>\n    )\n}\n\nexport default Nav;","import React, { Component } from 'react';\nimport './css/App.css';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\n\n// components\nimport Feed from './components/feed';\nimport Home from \"./components/home\";\nimport Nav from './components/nav'\nclass App extends React.Component {\n\n    render() {\n        return (\n            <Router>\n                <div className=\"wrapper\">\n                    <Nav/>\n                 <switch>\n                    <Route path=\"/\" exact component={Home}/>\n                    <Route path=\"/feed\" component={Feed}/>\n                 </switch>\n                </div>\n            </Router>\n            \n        )\n    }\n}\n\n\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}